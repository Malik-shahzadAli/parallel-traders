{"version":3,"sources":["webpack:///src/app/pages/chat/chat.component.ts","webpack:///src/app/pages/chat/chat.component.html","webpack:///src/app/pages/chat/chat.model.ts","webpack:///src/app/pages/chat/chat.module.ts","webpack:///src/app/pages/chat/chat.service.ts"],"names":["ChatComponent","appSettings","chatService","userImage","sidenavOpen","settings","chats","getChats","window","innerWidth","obj","talks","length","getTalk","push","currentChat","forEach","talk","my","image","sidenav","close","$event","which","newMessage","trim","Date","chatContainer","document","querySelector","setTimeout","nodes","querySelectorAll","newChatTextHeight","scrollTop","scrollHeight","clientHeight","selector","templateUrl","styleUrls","providers","Chat","author","authorStatus","text","date","routes","path","component","pathMatch","ChatModule","forChild","imports","declarations","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","ChatService"],"mappings":"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","file":"pages-chat-chat-module-es5.js","sourcesContent":["import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Chat } from './chat.model';\r\nimport { ChatService } from './chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss'],\r\n  providers: [ ChatService ]\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public settings: Settings;\r\n  public userImage = 'assets/img/users/user.jpg';\r\n  public chats: Array<Chat>;\r\n  public talks: Array<Chat>;\r\n  public sidenavOpen:boolean = true;\r\n  public currentChat:Chat;\r\n  public newMessage:string;\r\n\r\n  constructor(public appSettings:AppSettings, private chatService:ChatService) { \r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chats = this.chatService.getChats(); \r\n    if(window.innerWidth <= 768){\r\n      this.sidenavOpen = false;\r\n    }    \r\n  } \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth <= 768) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  public getChat(obj){\r\n    if(this.talks){\r\n       this.talks.length = 2;\r\n    }   \r\n    this.talks = this.chatService.getTalk();\r\n    this.talks.push(obj);\r\n    this.currentChat = obj;      \r\n    this.talks.forEach(talk => {\r\n      if(!talk.my){\r\n        talk.image = obj.image;\r\n      }\r\n    });\r\n    if(window.innerWidth <= 768){\r\n      this.sidenav.close();\r\n    }     \r\n  }\r\n\r\n  public sendMessage($event) {       \r\n    if (($event.which === 1 || $event.which === 13) && this.newMessage.trim() != '') {\r\n      if(this.talks){ \r\n        this.talks.push(\r\n            new Chat(\r\n              'assets/img/users/user.jpg', \r\n              'Emilio Verdines', \r\n              'online', \r\n              this.newMessage,\r\n              new Date(), \r\n              true)\r\n        )\r\n        this.newMessage = '';\r\n        let chatContainer = document.querySelector('.chat-content');\r\n        if(chatContainer){\r\n          setTimeout(() => {\r\n            var nodes = chatContainer.querySelectorAll('.mat-list-item');\r\n            let newChatTextHeight = nodes[nodes.length- 1];\r\n            chatContainer.scrollTop = chatContainer.scrollHeight + newChatTextHeight.clientHeight;\r\n          }); \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(){\r\n    if(this.talks)\r\n      this.talks.length = 2;\r\n  }\r\n\r\n}","<app-content-header     \r\n    [title]=\"'Chat'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-5'\"></app-content-header>\r\n\r\n<mat-toolbar color=\"primary\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"px-2 chat-toolbar\">\r\n    <div fxLayout=\"row\">\r\n        <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n            <mat-icon>list</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"currentChat\">\r\n        <mat-list class=\"p-0\">\r\n            <mat-list-item>\r\n                <img matListAvatar [src]=\"currentChat.image\" class=\"author-img\">\r\n            </mat-list-item>\r\n        </mat-list>\r\n        <span class=\"author-name\">{{currentChat.author}}</span>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"personMenu\" #personMenuTrigger=\"matMenuTrigger\">\r\n            <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #personMenu=\"matMenu\" xPosition=\"before\">\r\n            <span (mouseleave)=\"personMenuTrigger.closeMenu()\">\r\n                <button mat-menu-item (click)=\"personInfo.toggle()\">\r\n                    <mat-icon>account_circle</mat-icon>\r\n                    <span>Contact info</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                    <mat-icon>volume_mute</mat-icon>\r\n                    <span>Mute</span>\r\n                </button>\r\n                <button mat-menu-item> \r\n                    <mat-icon>delete_forever</mat-icon>\r\n                    <span>Clear chat</span>\r\n                </button>\r\n            </span>\r\n        </mat-menu>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\"> \r\n        <mat-card class=\"p-0 chat\">\r\n            <mat-drawer-container class=\"chat-container\">\r\n                <mat-drawer #sidenav [opened]=\"sidenavOpen\" [mode]=\"sidenavOpen ? 'side' : 'over'\" class=\"chat-sidenav mat-elevation-z1\" autoFocus=\"false\">\r\n                    <mat-nav-list class=\"p-0 chat-sidenav-list\" perfectScrollbar>\r\n                        <mat-list-item *ngFor=\"let chat of chats\" (click)=\"getChat(chat)\">\r\n                            <img matListAvatar [src]=\"chat.image\">\r\n                            <h6 matLine> {{chat.author}} </h6>\r\n                            <p matLine fxLayout=\"row\" fxLayoutAlign=\"none center\" class=\"secondary-text-color\">\r\n                                <span [ngSwitch]=\"chat.authorStatus\">\r\n                                    <mat-icon *ngSwitchCase=\"'Online'\" class=\"chat-status-icon\">check_circle</mat-icon>\r\n                                    <mat-icon *ngSwitchCase=\"'Offline'\" class=\"chat-status-icon\">highlight_off</mat-icon>\r\n                                    <mat-icon *ngSwitchCase=\"'Away'\" class=\"chat-status-icon\">schedule</mat-icon>\r\n                                    <mat-icon *ngSwitchCase=\"'Do not disturb'\" class=\"chat-status-icon\">not_interested</mat-icon>\r\n                                </span>\r\n                                <span class=\"author-status\">{{chat.authorStatus}}</span>\r\n                            </p>\r\n                        </mat-list-item>\r\n                    </mat-nav-list>\r\n                </mat-drawer>\r\n                \r\n                <div>\r\n                    <div class=\"chat-content\"  [class.actions-visible]=\"talks\" perfectScrollbar>\r\n                        <mat-list *ngIf=\"talks\" class=\"p-0\" >\r\n                            <mat-list-item *ngFor=\"let talk of talks\" class=\"talk-item\">\r\n                                <img matListAvatar [src]=\"talk.image\">\r\n                                <p matLine class=\"message\">\r\n                                    <span [ngClass]=\"(talk.my) ? 'bg-primary' : 'bg-accent'\">{{talk.text}}</span>\r\n                                </p>                             \r\n                                <p matLine class=\"message-date\">\r\n                                    <small>{{talk.date | date:\"dd MMMM, yyyy 'at' HH:mm\"}}</small>\r\n                                </p> \r\n                            </mat-list-item>\r\n                        </mat-list>\r\n                        <div *ngIf=\"!talks\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"h-100 empty\">\r\n                            <mat-icon>chat</mat-icon>            \r\n                            <p>Select a interlocutor for talk</p>\r\n                        </div> \r\n                    </div>\r\n                    <mat-card *ngIf=\"talks\" class=\"chat-actions\"> \r\n                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                            <mat-form-field class=\"w-100\">\r\n                                <input matInput placeholder=\"Enter your text...\" (keyup)=\"sendMessage($event)\" [(ngModel)]=\"newMessage\">\r\n                            </mat-form-field>\r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"scenter center\">\r\n                                <button mat-icon-button type=\"button\">\r\n                                    <mat-icon>attach_file</mat-icon>\r\n                                </button>\r\n                                <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"sendMessage($event)\">\r\n                                    <mat-icon>send</mat-icon>\r\n                                </button>\r\n                            </div>\r\n                            </div>\r\n                    </mat-card>\r\n                </div>\r\n\r\n                <mat-drawer #personInfo mode=\"over\" position=\"end\" class=\"person-info-sidenav mat-elevation-z1\" autoFocus=\"false\">\r\n                    <div class=\"p-0 h-100\" perfectScrollbar>\r\n\r\n                        <div class=\"bg-primary w-100 text-center\"> \r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"p-2\">\r\n                                <h2>Contact Info</h2>\r\n                                <button mat-icon-button (click)=\"personInfo.toggle()\"><mat-icon>close</mat-icon></button>\r\n                            </div>  \r\n                            <img *ngIf=\"currentChat\" [src]=\"currentChat.image\" class=\"py-2\">\r\n                            <h2 *ngIf=\"currentChat\" class=\"pb-3\">{{currentChat.author}}</h2>\r\n                        </div> \r\n                        <mat-list>\r\n                            <mat-list-item>\r\n                                <mat-icon matListIcon class=\"secondary-text-color\">mail_outline</mat-icon>\r\n                                <h3 matLine>author@gmail.com</h3>\r\n                            </mat-list-item>\r\n                            <mat-list-item>\r\n                                <mat-icon matListIcon class=\"secondary-text-color\">call</mat-icon>\r\n                                <h3 matLine>(202) 756-9756</h3>\r\n                            </mat-list-item>\r\n                            <mat-list-item>\r\n                                <mat-icon matListIcon class=\"secondary-text-color\">location_on</mat-icon>\r\n                                <h3 matLine>2903 Avenue Z, Brooklyn, NY</h3>\r\n                            </mat-list-item>\r\n                        </mat-list>                       \r\n                    </div>\r\n                </mat-drawer>\r\n            \r\n            </mat-drawer-container>\r\n        </mat-card>\r\n      </div>\r\n</div>\r\n","export class Chat {\r\n    constructor(public image: string,\r\n                public author: string,\r\n                public authorStatus: string,\r\n                public text: string,\r\n                public date: Date,\r\n                public my: boolean) { }\r\n} ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ChatComponent } from './chat.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: ChatComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ChatComponent\r\n  ]\r\n})\r\nexport class ChatModule { }","import { Injectable } from '@angular/core'\r\nimport { Chat } from './chat.model';\r\n\r\nlet date = new Date(),\r\n    day = date.getDate(),\r\n    month = date.getMonth(),\r\n    year = date.getFullYear(),\r\n    hour = date.getHours(),\r\n    minute = date.getMinutes();\r\n\r\nlet chats = [\r\n    new Chat(\r\n        'assets/img/profile/ashley.jpg',\r\n        'Ashley Ahlberg', \r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/bruno.jpg',\r\n        'Bruno Vespa',\r\n        'Do not disturb',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/julia.jpg',\r\n        'Julia Aniston',\r\n        'Away',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/adam.jpg',\r\n        'Adam Sandler',\r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/tereza.jpg',\r\n        'Tereza Stiles',\r\n        'Offline',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),  \r\n    new Chat(\r\n        'assets/img/profile/michael.jpg',\r\n        'Michael Blair',\r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    )\r\n]\r\n\r\nlet talks = [\r\n    new Chat(\r\n        'assets/img/profile/ashley.jpg',\r\n        'Ashley Ahlberg', \r\n        'Online',\r\n        'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Annular Admin Template?',\r\n        new Date(year, month, day-2, hour, minute+3),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/users/user.jpg',\r\n        'Emilio Verdines', \r\n        'Online',\r\n        'Hi, Annular is a fully compatible with angular material 2, responsive, organized folder structure, clean & customizable code, easy to use and much more...',\r\n        new Date(year, month, day-2, hour, minute+2),\r\n        true\r\n    )\r\n]\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n\r\n    public getChats():Array<Chat> {\r\n        return chats;\r\n    }\r\n\r\n    public getTalk():Array<Chat> {\r\n        return talks;\r\n    }\r\n\r\n}\r\n\r\n"]}