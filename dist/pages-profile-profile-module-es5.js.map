{"version":3,"sources":["webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/projects/projects.component.ts","webpack:///src/app/pages/profile/projects/projects.component.html","webpack:///src/app/pages/profile/user-info/user-info.component.ts","webpack:///src/app/pages/profile/user-info/user-info.component.html"],"names":["ProfileComponent","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","data","breadcrumb","ProfileModule","forChild","declarations","imports","ProjectsComponent","projects","image","name","desc","followers","UserInfoComponent","formBuilder","salutations","id","genders","countries","states","personalForm","group","required","compose","emailValidator","values","valid","onSubmit","control","emailRegexp","value","test","invalidEmail"],"mappings":"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","file":"pages-profile-profile-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-content-header \r\n    [icon]=\"'person'\" \r\n    [title]=\"'Profile'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"row wrap\" class=\"p-2\"> \r\n  <div fxFlex=\"100\" fxFlex.sm=\"35\" fxFlex.md=\"30\" fxFlex.lg=\"25\" class=\"p-2\">\r\n    <mat-card>\r\n      <img mat-card-image src=\"assets/img/users/user-orig.png\" alt=\"Photo 1\">\r\n      <mat-card-content>\r\n          <h2 class=\"text-center\">Emilio Verdines</h2>\r\n          <h3 class=\"text-center primary-color\">Web Developer</h3>\r\n          <h4 class=\"secondary-text-color py-1\">About:</h4>\r\n          <p class=\"text-justify\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n          <div fxLayoutAlign=\"end center\">\r\n              <a href=\"javascript:void(0);\" mat-stroked-button color=\"primary\">\r\n                  More <mat-icon>arrow_right_alt</mat-icon>\r\n              </a> \r\n          </div>          \r\n      </mat-card-content>\r\n      <mat-divider></mat-divider>\r\n      <div class=\"py-1\">\r\n        <div fxLayoutAlign=\"space-between center\">\r\n          <div>Followers:</div>\r\n          <strong class=\"d-inline-block\">675</strong>\r\n        </div>\r\n        <div fxLayoutAlign=\"space-between center\" class=\"mt-2\">\r\n          <div>Following:</div>\r\n          <strong class=\"d-inline-block\">428</strong>\r\n        </div>\r\n        <div fxLayoutAlign=\"space-between center\" class=\"mt-2\">\r\n          <div>Projects:</div>\r\n          <strong class=\"d-inline-block\">27</strong>\r\n        </div>\r\n      </div>      \r\n      <mat-divider></mat-divider>\r\n\r\n      <mat-card-actions  class=\"text-center py-1\"> \r\n          <button mat-mini-fab color=\"primary\" class=\"m-1\">\r\n            <svg class=\"mat-icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M17,2V2H17V6H15C14.31,6 14,6.81 14,7.5V10H14L17,10V14H14V22H10V14H7V10H10V6A4,4 0 0,1 14,2H17Z\" />\r\n            </svg>\r\n          </button>\r\n          <button mat-mini-fab color=\"primary\" class=\"m-1\">\r\n            <svg class=\"mat-icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M22.46,6C21.69,6.35 20.86,6.58 20,6.69C20.88,6.16 21.56,5.32 21.88,4.31C21.05,4.81 20.13,5.16 19.16,5.36C18.37,4.5 17.26,4 16,4C13.65,4 11.73,5.92 11.73,8.29C11.73,8.63 11.77,8.96 11.84,9.27C8.28,9.09 5.11,7.38 3,4.79C2.63,5.42 2.42,6.16 2.42,6.94C2.42,8.43 3.17,9.75 4.33,10.5C3.62,10.5 2.96,10.3 2.38,10C2.38,10 2.38,10 2.38,10.03C2.38,12.11 3.86,13.85 5.82,14.24C5.46,14.34 5.08,14.39 4.69,14.39C4.42,14.39 4.15,14.36 3.89,14.31C4.43,16 6,17.26 7.89,17.29C6.43,18.45 4.58,19.13 2.56,19.13C2.22,19.13 1.88,19.11 1.54,19.07C3.44,20.29 5.7,21 8.12,21C16,21 20.33,14.46 20.33,8.79C20.33,8.6 20.33,8.42 20.32,8.23C21.16,7.63 21.88,6.87 22.46,6Z\" />\r\n            </svg>\r\n          </button>\r\n          <button mat-mini-fab color=\"primary\" class=\"m-1\">\r\n            <svg class=\"mat-icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M21,21H17V14.25C17,13.19 15.81,12.31 14.75,12.31C13.69,12.31 13,13.19 13,14.25V21H9V9H13V11C13.66,9.93 15.36,9.24 16.5,9.24C19,9.24 21,11.28 21,13.75V21M7,21H3V9H7V21M5,3A2,2 0 0,1 7,5A2,2 0 0,1 5,7A2,2 0 0,1 3,5A2,2 0 0,1 5,3Z\" />\r\n            </svg>\r\n          </button>\r\n          <button mat-mini-fab color=\"primary\" class=\"m-1\">\r\n            <svg class=\"mat-icon\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M23,11H21V9H19V11H17V13H19V15H21V13H23M8,11V13.4H12C11.8,14.4 10.8,16.4 8,16.4C5.6,16.4 3.7,14.4 3.7,12C3.7,9.6 5.6,7.6 8,7.6C9.4,7.6 10.3,8.2 10.8,8.7L12.7,6.9C11.5,5.7 9.9,5 8,5C4.1,5 1,8.1 1,12C1,15.9 4.1,19 8,19C12,19 14.7,16.2 14.7,12.2C14.7,11.7 14.7,11.4 14.6,11H8Z\" />\r\n            </svg>\r\n          </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex=\"100\" fxFlex.sm=\"65\" fxFlex.md=\"70\" fxFlex.lg=\"75\" class=\"p-2\">\r\n      <router-outlet></router-outlet>    \r\n  </div> \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { UserInfoComponent } from './user-info/user-info.component';\r\n\r\nexport const routes = [\r\n  {\r\n      path: '', \r\n      component: ProfileComponent,\r\n      children:[\r\n        { path: '', redirectTo: 'projects', pathMatch: 'full'},\r\n        { path: 'projects', component: ProjectsComponent, data: { breadcrumb: 'Projects' } },\r\n        { path: 'user-info', component: UserInfoComponent, data: { breadcrumb: 'User Information' } }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent, \r\n    ProjectsComponent, \r\n    UserInfoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n  public projects = [\r\n    { image: 'assets/img/projects/1.jpg', name: 'Project Name 1', desc: \"Some quick example text to build on the card title and make up the bulk of the card's content.\", followers: 10 },\r\n    { image: 'assets/img/projects/2.jpg', name: 'Project Name 2', desc: \"Some quick example text to build on the card title and make up the bulk of the card's content.\", followers: 28 },\r\n    { image: 'assets/img/projects/3.jpg', name: 'Project Name 3', desc: \"Some quick example text to build on the card title and make up the bulk of the card's content.\", followers: 15 },\r\n    { image: 'assets/img/projects/4.jpg', name: 'Project Name 4', desc: \"Some quick example text to build on the card title and make up the bulk of the card's content.\", followers: 43 }\r\n  ]\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"projects-wrapper\">\r\n  <div *ngFor=\"let project of projects\" fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-2\">\r\n      <mat-card>\r\n        <img mat-card-image [src]=\"project.image\" alt=\"\">\r\n        <mat-card-content>\r\n          <h2 class=\"text-center\">{{project.name}}</h2>\r\n          <p class=\"text-justify mt-2\">{{project.desc}}</p>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions fxLayoutAlign=\"space-between center\">\r\n          <div fxLayoutAlign=\"start center\">  \r\n            <button mat-icon-button><mat-icon class=\"secondary-text-color\">share</mat-icon></button>\r\n            <button mat-icon-button><mat-icon class=\"secondary-text-color\">favorite</mat-icon></button> \r\n            <span class=\"followers\">{{project.followers}}</span>          \r\n          </div>\r\n          <div>\r\n            <a href=\"javascript:void(0);\" mat-button  class=\"secondary-text-color\">\r\n              Live Preview <mat-icon>insert_photo</mat-icon>\r\n            </a>\r\n          </div>          \r\n        </mat-card-actions>\r\n      </mat-card>\r\n  </div>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.scss']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n  public personalForm:FormGroup;\r\n  public salutations = [\r\n    { id: 1, name: 'Mr' },\r\n    { id: 2, name: 'Mrs' } \r\n  ];\r\n  public genders = [\r\n    { id: 1, name: 'Male' },\r\n    { id: 2, name: 'Female' } \r\n  ];\r\n  public countries = [\r\n    { id: 1, name: 'USA' },\r\n    { id: 2, name: 'Canada' },\r\n    { id: 3, name: 'Mexico' },\r\n    { id: 4, name: 'UK' },\r\n    { id: 5, name: 'France' },\r\n    { id: 6, name: 'Italy' } \r\n  ];\r\n  public states = [\r\n    { id: 1, name: 'Arkansas' },\r\n    { id: 2, name: 'Texas' },\r\n    { id: 3, name: 'California' },\r\n    { id: 4, name: 'Florida' },\r\n    { id: 5, name: 'Other' } \r\n  ];\r\n \r\n  constructor(private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.personalForm = this.formBuilder.group({\r\n      'salutation': [''],\r\n      'firstname': ['', Validators.required],\r\n      'lastname': ['', Validators.required],\r\n      'gender': [''],\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'phone': ['', Validators.required],\r\n      'zipcode': ['', Validators.required],\r\n      'country': ['', Validators.required],\r\n      'state' : [''],\r\n      'address' : ['']\r\n    });\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n      if (this.personalForm.valid) {\r\n          // this.router.navigate(['pages/dashboard']);\r\n      }\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport function emailValidator(control: FormControl): {[key: string]: any} {\r\n  var emailRegexp = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$/;    \r\n  if (control.value && !emailRegexp.test(control.value)) {\r\n      return {invalidEmail: true};\r\n  }\r\n}\r\n","<mat-card class=\"p-0\">  \r\n    <div class=\"bg-primary text-center py-2\">       \r\n        <h2>Edit your data:</h2> \r\n    </div> \r\n    \r\n    <form [formGroup]=\"personalForm\" (ngSubmit)=\"onSubmit(personalForm.value)\" fxLayout=\"row wrap\" class=\"user-form p-2\">\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Salutation</mat-label> \r\n                <mat-select placeholder=\"Select salutation\" formControlName=\"salutation\">\r\n                    <mat-option *ngFor=\"let salutation of salutations\" [value]=\"salutation\">\r\n                        {{salutation.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>First Name</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"First Name\" formControlName=\"firstname\" type=\"text\">\r\n                <mat-error *ngIf=\"personalForm.controls.firstname.errors?.required\">First Name is required</mat-error>                \r\n            </mat-form-field> \r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Last Name</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Last Name\" formControlName=\"lastname\" type=\"text\">\r\n                <mat-error *ngIf=\"personalForm.controls.lastname.errors?.required\">Last Name is required</mat-error>                  \r\n            </mat-form-field> \r\n        </div>\r\n\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Gender</mat-label> \r\n                <mat-select placeholder=\"Select gender\" formControlName=\"gender\">\r\n                    <mat-option *ngFor=\"let gender of genders\" [value]=\"gender\">\r\n                        {{gender.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Contact email</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Email\" formControlName=\"email\" type=\"text\"> \r\n                <mat-error *ngIf=\"personalForm.controls.email.errors?.required\">Email is required</mat-error>                 \r\n            </mat-form-field> \r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Phone</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Phone\" formControlName=\"phone\" type=\"text\"> \r\n                <mat-error *ngIf=\"personalForm.controls.phone.errors?.required\">Phone is required</mat-error>                 \r\n            </mat-form-field> \r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Zip Code</mat-label>\r\n                <input matInput autocomplete=\"off\" placeholder=\"Zip Code\" formControlName=\"zipcode\" type=\"text\"> \r\n                <mat-error *ngIf=\"personalForm.controls.zipcode.errors?.required\">Zip Code is required</mat-error>                 \r\n            </mat-form-field> \r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Country</mat-label> \r\n                <mat-select placeholder=\"Select country\" formControlName=\"country\">\r\n                    <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\r\n                        {{country.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"personalForm.controls.country.errors?.required\">Country is required</mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"40\" fxFlex.sm=\"50\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>State</mat-label> \r\n                <mat-select placeholder=\"Select state\" formControlName=\"state\">\r\n                    <mat-option *ngFor=\"let state of states\" [value]=\"state\">\r\n                        {{state.name}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"100\" class=\"p-2\">\r\n            <mat-form-field appearance=\"outline\">\r\n                <mat-label>Address</mat-label> \r\n                <textarea matInput placeholder=\"Enter address\" formControlName=\"address\"></textarea> \r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div fxFlex=\"100\" class=\"p-2 text-center\">\r\n            <button mat-raised-button color=\"primary\" class=\"uppercase mx-1\" type=\"submit\">Update</button>             \r\n        </div>\r\n\r\n    </form> \r\n   \r\n</mat-card>\r\n "]}