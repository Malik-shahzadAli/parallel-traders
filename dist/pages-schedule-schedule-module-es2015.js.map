{"version":3,"sources":["./src/app/pages/schedule/schedule-dialog/schedule-dialog.component.ts","./src/app/pages/schedule/schedule-dialog/schedule-dialog.component.html","./src/app/pages/schedule/schedule.component.ts","./src/app/pages/schedule/schedule.component.html","./src/app/pages/schedule/schedule.module.ts"],"names":[],"mappings":"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","file":"pages-schedule-schedule-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-schedule-dialog',\r\n  templateUrl: './schedule-dialog.component.html'\r\n})\r\nexport class ScheduleDialogComponent implements OnInit {\r\n  public form:FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<ScheduleDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              public formBuilder: FormBuilder) {\r\n    this.form = this.formBuilder.group({ \r\n      'title': ['', Validators.required],            \r\n      'start': ['', Validators.required], \r\n      'end': '',\r\n      'isEdit' : false\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.data){\r\n      this.form.patchValue({\r\n        'title': this.data.title,\r\n        'start': this.data.start,\r\n        'end': this.data.end,\r\n        'isEdit' : true\r\n      })\r\n    }\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}","<h1 mat-dialog-title><span *ngIf=\"!form.controls.isEdit.value\">Add</span><span *ngIf=\"form.controls.isEdit.value\">Edit</span> event</h1>\r\n<div mat-dialog-content>\r\n    <form [formGroup]=\"form\">\r\n        <mat-form-field class=\"w-100\">\r\n          <input matInput placeholder=\"Title\" formControlName=\"title\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"w-100\">\r\n          <input matInput [matDatepicker]=\"start\" placeholder=\"Start Date\" formControlName=\"start\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"start\"></mat-datepicker-toggle>\r\n          <mat-datepicker #start></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"w-100\">\r\n          <input matInput [matDatepicker]=\"end\" placeholder=\"End Date\" formControlName=\"end\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"end\"></mat-datepicker-toggle>\r\n          <mat-datepicker #end></mat-datepicker>\r\n        </mat-form-field>\r\n    </form>\r\n</div>\r\n<div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"form.value\" [disabled]=\"!form.valid\"><span *ngIf=\"!form.controls.isEdit.value\">Save</span><span *ngIf=\"form.controls.isEdit.value\">Update</span></button>\r\n    <button mat-raised-button color=\"warn\" (click)=\"close()\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent } from 'angular-calendar';\r\nimport { startOfDay, endOfDay, subDays, addDays, endOfMonth, isSameDay, isSameMonth, addHours } from 'date-fns';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Subject } from 'rxjs';\r\nimport { blockTransition } from '../../theme/utils/app-animation';\r\n\r\nconst colors: any = {\r\n  red: {\r\n    primary: '#ad2121',\r\n    secondary: '#FAE3E3'\r\n  },\r\n  blue: {\r\n    primary: '#1e90ff',\r\n    secondary: '#D1E8FF'\r\n  },\r\n  yellow: {\r\n    primary: '#e3bc08',\r\n    secondary: '#FDF1BA'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss'],\r\n  animations: [ blockTransition ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n  view: string = 'month';\r\n  viewDate: Date = new Date();\r\n  activeDayIsOpen: boolean = true;\r\n  actions: CalendarEventAction[] = [{\r\n      label: '<i class=\"material-icons icon-sm white\">edit</i>',\r\n      onClick: ({event}: {event: CalendarEvent}): void => {\r\n          this.openScheduleDialog(event);\r\n      }\r\n  }, {\r\n      label: '<i class=\"material-icons icon-sm white\">close</i>',\r\n      onClick: ({event}: {event: CalendarEvent}): void => {\r\n          this.events = this.events.filter(iEvent => iEvent !== event);\r\n          this.snackBar.open('Event deleted successfully!', null, {\r\n              duration: 1500\r\n          });\r\n      }\r\n  }];\r\n  events: CalendarEvent[] = [{\r\n    start: subDays(startOfDay(new Date()), 1),\r\n    end: addDays(new Date(), 1),\r\n    title: 'A 3 day event',\r\n    color: colors.red,\r\n    actions: this.actions\r\n  }, {\r\n    start: startOfDay(new Date()),\r\n    title: 'An event with no end date',\r\n    color: colors.yellow,\r\n    actions: this.actions\r\n  }, {\r\n    start: subDays(endOfMonth(new Date()), 3),\r\n    end: addDays(endOfMonth(new Date()), 3),\r\n    title: 'A long event that spans 2 months',\r\n    color: colors.blue\r\n  }, {\r\n    start: addHours(startOfDay(new Date()), 2),\r\n    end: new Date(),\r\n    title: 'A draggable and resizable event',\r\n    color: colors.yellow,\r\n    actions: this.actions,\r\n    resizable: {\r\n      beforeStart: true,\r\n      afterEnd: true\r\n    },\r\n    draggable: true\r\n  }];\r\n  refresh: Subject<any> = new Subject();\r\n\r\n\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, \r\n              public dialog: MatDialog, \r\n              public snackBar: MatSnackBar){\r\n      this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  dayClicked({date, events}: {date: Date, events: CalendarEvent[]}): void {    \r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n        this.viewDate = date;\r\n      }\r\n    }\r\n  }\r\n\r\n  openScheduleDialog(event){\r\n    let dialogRef = this.dialog.open(ScheduleDialogComponent, {\r\n      data: event\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result){\r\n        if(!result.isEdit){\r\n          result.color = colors.blue;\r\n          result.actions = this.actions;\r\n          this.events.push(result);\r\n          this.refresh.next();\r\n        }else{\r\n          //implement edit here\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}","<app-content-header \r\n    [title]=\"'Schedule'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-5 cal-mobile'\"></app-content-header>\r\n\r\n<mat-toolbar color=\"primary\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between center\" class=\"px-2 schedule-toolbar\">\r\n    <div class=\"cal-arrows\">                \r\n        <button mat-icon-button mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\">\r\n            <mat-icon *ngIf=\"!settings.rtl\">chevron_left</mat-icon>\r\n            <mat-icon *ngIf=\"settings.rtl\">chevron_right</mat-icon>\r\n        </button>\r\n        <button mat-icon-button mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n            <mat-icon>today</mat-icon>\r\n        </button>\r\n        <button mat-icon-button mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\">\r\n            <mat-icon *ngIf=\"settings.rtl\">chevron_left</mat-icon>\r\n            <mat-icon *ngIf=\"!settings.rtl\">chevron_right</mat-icon>\r\n        </button>\r\n    </div>\r\n    <h2>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h2>\r\n    <div class=\"\">\r\n        <button mat-icon-button (click)=\"view = 'month'\">\r\n            <mat-icon>view_comfy</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"view = 'week'\">\r\n            <mat-icon>view_week</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"view = 'day'\">\r\n            <mat-icon>view_day</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"openScheduleDialog(null)\">\r\n            <mat-icon>add</mat-icon>\r\n        </button>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\"> \r\n        <mat-card class=\"block p-0\">  \r\n            <div [ngSwitch]=\"view\">\r\n                <mwl-calendar-month-view\r\n                    *ngSwitchCase=\"'month'\"\r\n                    [viewDate]=\"viewDate\"\r\n                    [events]=\"events\"\r\n                    [refresh]=\"refresh\"\r\n                    [activeDayIsOpen]=\"activeDayIsOpen\"\r\n                    (dayClicked)=\"dayClicked($event.day)\">\r\n                </mwl-calendar-month-view>\r\n                <mwl-calendar-week-view\r\n                    *ngSwitchCase=\"'week'\"\r\n                    [viewDate]=\"viewDate\"\r\n                    [events]=\"events\"\r\n                    [refresh]=\"refresh\">\r\n                </mwl-calendar-week-view>\r\n                <mwl-calendar-day-view\r\n                    *ngSwitchCase=\"'day'\"\r\n                    [viewDate]=\"viewDate\"\r\n                    [events]=\"events\"\r\n                    [refresh]=\"refresh\">\r\n                </mwl-calendar-day-view>\r\n            </div>\r\n\r\n       </mat-card>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'angular-calendar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ScheduleComponent } from './schedule.component';\r\nimport { ScheduleDialogComponent } from './schedule-dialog/schedule-dialog.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: ScheduleComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CalendarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ScheduleComponent, \r\n    ScheduleDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    ScheduleDialogComponent\r\n  ]\r\n})\r\nexport class ScheduleModule { }"],"sourceRoot":"webpack:///"}