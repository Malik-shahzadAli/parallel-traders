{"version":3,"sources":["./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/register/register.module.ts"],"names":[],"mappings":"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","file":"pages-register-register-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router){\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n    if (this.form.valid) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    setTimeout(() => {\r\n      this.settings.loadingSpinner = false; \r\n    }); \r\n  }\r\n}","<mat-sidenav-container class=\"h-100\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"h-100\">\r\n       <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\" fxFlex=\"90\" fxFlex.gt-sm=\"30\" fxFlex.sm=\"60\" class=\"mat-elevation-z6\">\r\n            <app-content-header \r\n                [icon]=\"'person_add'\" \r\n                [title]=\"'Register'\" \r\n                [hideBreadcrumb]=\"true\"\r\n                [hasBgImage]=\"true\" \r\n                [class]=\"'py-4'\"></app-content-header>            \r\n            <div class=\"p-4\">\r\n                <a mat-button routerLink=\"/login\" color=\"accent\" class=\"w-100\">Already have an account? Sign in!</a>\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">person</mat-icon>\r\n                    <input matInput placeholder=\"Full Name\" formControlName=\"name\">\r\n                    <mat-error *ngIf=\"form.controls.name.errors?.required\">Full Name is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.name.hasError('minlength')\">Full Name isn't long enough, minimum of 3 characters</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">mail</mat-icon>\r\n                    <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n                    <mat-error *ngIf=\"form.controls.email.errors?.required\">Email is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.email.hasError('invalidEmail')\">Invalid email address</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">lock</mat-icon>\r\n                    <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" minlength=\"6\">\r\n                    <mat-error *ngIf=\"form.controls.password.errors?.required\">Password is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.password.hasError('minlength')\">Password isn't long enough, minimum of 6 characters</mat-error>\r\n                </mat-form-field> \r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">lock</mat-icon>\r\n                    <input matInput placeholder=\"Confirm Password\" formControlName=\"confirmPassword\" type=\"password\">\r\n                    <mat-error *ngIf=\"form.controls.confirmPassword.errors?.required\">Confirm Password is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.confirmPassword.hasError('mismatchedPasswords')\">Passwords do not match</mat-error>\r\n                </mat-form-field>\r\n                <button mat-raised-button color=\"primary\" class=\"mat-elevation-z6 w-100 mt-3\" type=\"submit\">SIGN UP</button>\r\n            </div>\r\n        </form>\r\n  </div>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: RegisterComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class RegisterModule { }"],"sourceRoot":"webpack:///"}