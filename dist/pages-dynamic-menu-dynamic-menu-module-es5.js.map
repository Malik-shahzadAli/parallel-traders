{"version":3,"sources":["webpack:///src/app/pages/dynamic-menu/dynamic-menu.component.ts","webpack:///src/app/pages/dynamic-menu/dynamic-menu.component.html","webpack:///src/app/pages/dynamic-menu/dynamic-menu.module.ts","webpack:///src/app/pages/dynamic-menu/dynamic-menu.service.ts"],"names":["DynamicMenuComponent","appSettings","formBuilder","snackBar","menuService","dynamicMenuService","icons","settings","menuItems","getVerticalMenuItems","form","group","compose","required","minLength","valueChanges","pipe","subscribe","menu","routerLink","controls","setValue","disable","clearValidators","enable","setValidators","updateValueAndValidity","href","valid","addNewMenuItem","open","duration","reset","hasSubMenu","parentId","onSubmit","selector","templateUrl","providers","animations","host","routes","path","component","pathMatch","DynamicMenuModule","forChild","imports","declarations","DynamicMenuService","componentFactoryResolver","applicationRef","injector","menuItem","lastId","length","id","newMenuItem","parseInt","push","item","filter","componentRef","resolveComponentFactory","create","attachView","hostView","instance","menuParentId","elem","rootNodes","verticalMenu","document","getElementById","replaceChild","children"],"mappings":"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","file":"pages-dynamic-menu-dynamic-menu-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Menu } from '../../theme/components/menu/menu.model';\r\nimport { MenuService } from '../../theme/components/menu/menu.service';\r\nimport { DynamicMenuService } from './dynamic-menu.service';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { VerticalMenuComponent } from '../../theme/components/menu/vertical-menu/vertical-menu.component';\r\nimport { blockTransition } from '../../theme/utils/app-animation';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-menu',\r\n  templateUrl: './dynamic-menu.component.html',\r\n  providers: [ DynamicMenuService, MenuService ],\r\n  animations: [ blockTransition ],\r\n  host: {\r\n    '[@blockTransition]': ''\r\n  }\r\n})\r\nexport class DynamicMenuComponent implements OnInit {\r\n  public settings: Settings;\r\n  public menuItems:Array<Menu>;\r\n  public icons = ['home','person', 'card_travel', 'delete', 'event', 'favorite', 'help' ]\r\n  public form:FormGroup;\r\n  constructor(public appSettings:AppSettings, \r\n              public formBuilder: FormBuilder, \r\n              public snackBar: MatSnackBar,\r\n              private menuService:MenuService,\r\n              private dynamicMenuService:DynamicMenuService) {\r\n    this.settings = this.appSettings.settings; \r\n    this.menuItems = this.menuService.getVerticalMenuItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      'title': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'icon': null,\r\n      'routerLink': ['', Validators.required],    \r\n      'href': ['', Validators.required],            \r\n      'target': null,\r\n      'hasSubMenu': false,\r\n      'parentId': 0\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.form.valueChanges.pipe(debounceTime(500)).subscribe((menu:Menu) => {  \r\n      if(menu.routerLink && menu.routerLink != ''){\r\n        this.form.controls['href'].setValue(null);\r\n        this.form.controls['href'].disable();\r\n        this.form.controls['href'].clearValidators();\r\n        this.form.controls['target'].setValue(null);\r\n        this.form.controls['target'].disable();\r\n      }\r\n      else{\r\n        this.form.controls['href'].enable();\r\n        this.form.controls['href'].setValidators([Validators.required]);\r\n        this.form.controls['target'].enable();\r\n      }\r\n      this.form.controls['href'].updateValueAndValidity();\r\n\r\n      if(menu.href && menu.href != ''){\r\n        this.form.controls['routerLink'].setValue(null);\r\n        this.form.controls['routerLink'].disable();\r\n        this.form.controls['routerLink'].clearValidators();\r\n        this.form.controls['hasSubMenu'].setValue(false);\r\n        this.form.controls['hasSubMenu'].disable();\r\n      }\r\n      else{\r\n        this.form.controls['routerLink'].enable();\r\n        this.form.controls['routerLink'].setValidators([Validators.required]);\r\n        this.form.controls['hasSubMenu'].enable();\r\n      }\r\n      this.form.controls['routerLink'].updateValueAndValidity();\r\n    })\r\n  }\r\n\r\n  onSubmit(menu:Menu):void {\r\n    if (this.form.valid) {\r\n      this.dynamicMenuService.addNewMenuItem(VerticalMenuComponent, this.menuItems, menu);\r\n      this.snackBar.open('New menu item added successfully!', null, {\r\n        duration: 2000,\r\n      });\r\n      this.form.reset({\r\n        hasSubMenu:false,\r\n        parentId:0\r\n      });     \r\n    }\r\n  } \r\n\r\n}","<app-content-header \r\n    [icon]=\"'format_list_bulleted'\" \r\n    [title]=\"'Dynamic menu'\" \r\n    [desc]=\"'Create and add menu items dynamically using following approach.'\"\r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center\" class=\"p-2\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" fxFlex.sm=\"60\" class=\"p-2\">\r\n        <mat-card class=\"block\">\r\n            <mat-card-content>\r\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\">      \r\n                    <mat-form-field class=\"w-100\">\r\n                        <input matInput placeholder=\"Title\" formControlName=\"title\">\r\n                        <mat-error *ngIf=\"form.controls.title.errors?.required\">Menu title is required</mat-error>\r\n                        <mat-error *ngIf=\"form.controls.title.hasError('minlength')\">Menu title isn't long enough, minimum of 3 characters</mat-error>\r\n                    </mat-form-field> \r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-select placeholder=\"Icon\" formControlName=\"icon\">\r\n                            <mat-option *ngFor=\"let icon of icons\" [value]=\"icon\">\r\n                                <mat-icon>{{ icon }}</mat-icon>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"w-100\" >\r\n                        <input matInput placeholder=\"RouterLink\" formControlName=\"routerLink\" matTooltip=\"e.g. /dashboard\" matTooltipPosition=\"after\">\r\n                        <mat-error *ngIf=\"form.controls.routerLink.errors?.required\">Routerlink or href is required</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-checkbox formControlName=\"hasSubMenu\">Has sub menu</mat-checkbox>\r\n                    <mat-form-field class=\"w-100\" >\r\n                        <input matInput placeholder=\"Href\" formControlName=\"href\" matTooltip=\"e.g. http://themeseason.com\" matTooltipPosition=\"after\">\r\n                        <mat-error *ngIf=\"form.controls.href.errors?.required\">Href or routerlink is required</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-radio-group formControlName=\"target\">\r\n                        <mat-radio-button value=\"_blank\">_blank</mat-radio-button>\r\n                        <mat-radio-button value=\"_self\" class=\"mx-2\">_self</mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <mat-form-field class=\"w-100\">\r\n                        <mat-select placeholder=\"Parent menu\" formControlName=\"parentId\">\r\n                            <mat-option value=\"0\">-- Select Parent Menu --</mat-option>\r\n                            <mat-option *ngFor=\"let menuItem of menuItems\" [value]=\"menuItem.id\">\r\n                                {{menuItem.title}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n                        <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\" type=\"submit\">Add New Menu Item</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n      </div> \r\n</div> ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DynamicMenuComponent } from './dynamic-menu.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: DynamicMenuComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    DynamicMenuComponent\r\n  ]\r\n})\r\nexport class DynamicMenuModule { }","import { Injectable, Injector, ComponentFactoryResolver, ApplicationRef, EmbeddedViewRef } from '@angular/core';\r\nimport { VerticalMenuComponent } from '../../theme/components/menu/vertical-menu/vertical-menu.component';\r\nimport { Menu } from '../../theme/components/menu/menu.model';\r\n\r\n@Injectable()\r\nexport class DynamicMenuService {\r\n\r\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\r\n                private applicationRef: ApplicationRef,\r\n                private injector: Injector) { }     \r\n    \r\n    addNewMenuItem(component: any, menuItems:Array<Menu>, menuItem) {\r\n\r\n        const lastId = menuItems[menuItems.length-1].id;\r\n        const newMenuItem = new Menu(lastId+1, menuItem['title'], menuItem['routerLink'], menuItem['href'], menuItem['icon'], menuItem['target'], menuItem['hasSubMenu'], parseInt(menuItem['parentId']));\r\n                \r\n        menuItems.push(newMenuItem);\r\n        let item = menuItems.filter(item=>item.id == newMenuItem.parentId)[0];\r\n        if(item) item.hasSubMenu = true;  \r\n\r\n        const componentRef = this.componentFactoryResolver\r\n            .resolveComponentFactory(component)\r\n            .create(this.injector);        \r\n        \r\n        this.applicationRef.attachView(componentRef.hostView);\r\n        \r\n        let instance = <VerticalMenuComponent>componentRef.instance;\r\n        instance.menuItems = menuItems;\r\n        instance.menuParentId = 0;\r\n\r\n        const elem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n        \r\n        const verticalMenu = document.getElementById('vertical-menu');        \r\n        verticalMenu.replaceChild(elem, verticalMenu.children[0]);     \r\n        \r\n    } \r\n}"]}