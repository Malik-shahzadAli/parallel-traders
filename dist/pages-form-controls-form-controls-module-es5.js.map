{"version":3,"sources":["webpack:///src/app/pages/form-controls/autocomplete/autocomplete.component.ts","webpack:///src/app/pages/form-controls/autocomplete/autocomplete.component.html","webpack:///src/app/pages/form-controls/checkbox/checkbox.component.ts","webpack:///src/app/pages/form-controls/checkbox/checkbox.component.html","webpack:///src/app/pages/form-controls/datepicker/datepicker.component.ts","webpack:///src/app/pages/form-controls/datepicker/datepicker.component.html","webpack:///src/app/pages/form-controls/form-controls.module.ts","webpack:///src/app/pages/form-controls/form-field/form-field.component.ts","webpack:///src/app/pages/form-controls/form-field/form-field.component.html","webpack:///src/app/pages/form-controls/input/input.component.ts","webpack:///src/app/pages/form-controls/input/input.component.html","webpack:///src/app/pages/form-controls/radio-button/radio-button.component.ts","webpack:///src/app/pages/form-controls/radio-button/radio-button.component.html","webpack:///src/app/pages/form-controls/select/select.component.ts","webpack:///src/app/pages/form-controls/select/select.component.html","webpack:///src/app/pages/form-controls/slide-toggle/slide-toggle.component.ts","webpack:///src/app/pages/form-controls/slide-toggle/slide-toggle.component.html","webpack:///src/app/pages/form-controls/slider/slider.component.ts","webpack:///src/app/pages/form-controls/slider/slider.component.html"],"names":["AutocompleteComponent","appSettings","myControl","options","filteredControl","settings","filteredOptions","valueChanges","pipe","val","filter","option","toLowerCase","indexOf","selector","templateUrl","CheckboxComponent","checked","indeterminate","labelPosition","disabled","DatepickerComponent","startDate","Date","minDate","maxDate","myFilter","d","day","getDay","events","type","event","push","value","addEvent","$event","styleUrls","routes","path","redirectTo","pathMatch","component","data","breadcrumb","FormControlsModule","forChild","imports","declarations","FormFieldComponent","formBuilder","email","required","hide","group","hideRequired","floatLabel","themingForm","min","hasError","Math","max","fontSize","InputComponent","emailFormControl","matcher","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","RadioButtonComponent","seasons","SelectComponent","foods","viewValue","pokemonControl","pokemonGroups","name","pokemon","toppings","toppingList","toppings2","toppingList2","SlideToggleComponent","color","SliderComponent","autoTicks","invert","showTicks","step","thumbLabel","vertical","_tickInterval","v","Number"],"mappings":"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","file":"pages-form-controls-form-controls-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html'\r\n})\r\nexport class AutocompleteComponent {\r\n  myControl: FormControl = new FormControl();\r\n  options = [\r\n    'One',\r\n    'Two',\r\n    'Three'\r\n  ];\r\n  filteredControl: FormControl = new FormControl();\r\n  filteredOptions: Observable<string[]>;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.filteredControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(val => this.filter(val))\r\n      );\r\n  }\r\n\r\n  filter(val): string[] {\r\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'short_text'\" \r\n    [title]=\"'Autocomplete'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\" class=\"p-2\"> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n                                {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Filter autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"filteredControl\" [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                              {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>           \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html'\r\n})\r\nexport class CheckboxComponent {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition = 'after';\r\n  disabled = false;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'check_box'\" \r\n    [title]=\"'Checkbox'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Checkbox configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\" class=\"mx-2\">Checked</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"indeterminate\" class=\"mx-2\">Indeterminate</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <label class=\"mx-2\">Label position:</label>\r\n                    <mat-radio-group [(ngModel)]=\"labelPosition\">\r\n                        <mat-radio-button value=\"after\" class=\"mx-2\">After</mat-radio-button>\r\n                        <mat-radio-button value=\"before\" class=\"mx-2\">Before</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox\r\n                        class=\"mx-2\"\r\n                        [(ngModel)]=\"checked\"\r\n                        [(indeterminate)]=\"indeterminate\"\r\n                        [labelPosition]=\"labelPosition\"\r\n                        [disabled]=\"disabled\">\r\n                        I'm a checkbox\r\n                    </mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n  styleUrls: ['./datepicker.component.scss']\r\n})\r\nexport class DatepickerComponent {  \r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  //Datepicker start date\r\n  startDate = new Date(1990, 0, 1);\r\n\r\n  //Datepicker with min & max validation\r\n  minDate = new Date(2010, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n\r\n  //Datepicker with filter validation\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  //Datepicker input and change events\r\n  events: string[] = [];\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push(`${type}: ${event.value}`);\r\n  }\r\n}\r\n","<app-content-header \r\n    [icon]=\"'today'\" \r\n    [title]=\"'Datepicker'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\" class=\"p-2\"> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker1\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker start date</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with min & max validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker3\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker3></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with filter validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker4\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker4></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker input and change events</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker5\" placeholder=\"Input & change events\"\r\n                          (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker5></mat-datepicker>\r\n                </mat-form-field>                \r\n                <div class=\"w-100 mat-elevation-z4 p-1 events-list\" perfectScrollbar> \r\n                    <div *ngFor=\"let e of events\">{{e}}</div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Disabled datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">             \r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp1></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp2></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker touch UI</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker6\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\r\n                    <mat-datepicker touchUi=\"true\" #picker6></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker open method</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker #picker7></mat-datepicker>\r\n                </mat-form-field>\r\n                <button mat-raised-button (click)=\"picker7.open()\">Open</button>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>                                 \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormFieldComponent } from './form-field/form-field.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\r\nimport { SelectComponent } from './select/select.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\n\r\nexport const routes = [\r\n  { path: '', redirectTo: 'autocomplete', pathMatch: 'full'},\r\n  { path: 'autocomplete', component: AutocompleteComponent, data: { breadcrumb: 'Autocomplete' } },\r\n  { path: 'checkbox', component: CheckboxComponent, data: { breadcrumb: 'Checkbox' } },\r\n  { path: 'datepicker', component: DatepickerComponent, data: { breadcrumb: 'Datepicker' } },\r\n  { path: 'form-field', component: FormFieldComponent, data: { breadcrumb: 'Form Field' } },\r\n  { path: 'input', component: InputComponent, data: { breadcrumb: 'Input' } },\r\n  { path: 'radio-button', component: RadioButtonComponent, data: { breadcrumb: 'Radio Button' } },\r\n  { path: 'select', component: SelectComponent, data: { breadcrumb: 'Select' } },\r\n  { path: 'slider', component: SliderComponent, data: { breadcrumb: 'Slider' } },\r\n  { path: 'slide-toggle', component: SlideToggleComponent, data: { breadcrumb: 'Slide Toggle' } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AutocompleteComponent, \r\n    CheckboxComponent, \r\n    DatepickerComponent, \r\n    FormFieldComponent, \r\n    InputComponent, \r\n    RadioButtonComponent, \r\n    SelectComponent, \r\n    SliderComponent, \r\n    SlideToggleComponent\r\n  ]\r\n})\r\nexport class FormControlsModule { }","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  templateUrl: './form-field.component.html'\r\n})\r\nexport class FormFieldComponent {\r\n  options: FormGroup;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  hide:boolean = true;\r\n  themingForm: FormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public formBuilder:FormBuilder) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.options = this.formBuilder.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n    this.themingForm = this.formBuilder.group({\r\n      'color': 'primary',\r\n      'fontSize': [16, Validators.min(10)],\r\n    });\r\n  }\r\n  \r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n        this.email.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n\r\n  getFontSize() {\r\n    return Math.max(10, this.themingForm.value.fontSize);\r\n  }\r\n\r\n}","<app-content-header \r\n    [icon]=\"'view_stream'\" \r\n    [title]=\"'Form field'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple form field</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Input\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <textarea matInput placeholder=\"Textarea\"></textarea>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select\">\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>                               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with placeholder</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <form [formGroup]=\"options\">\r\n                    <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n                    <div class=\"py-1\">\r\n                        <label>Float label: </label>\r\n                        <mat-radio-group formControlName=\"floatLabel\">\r\n                            <mat-radio-button value=\"auto\" class=\"mx-2\">Auto</mat-radio-button>\r\n                            <mat-radio-button value=\"always\" class=\"mx-2\">Always</mat-radio-button>\r\n                            <mat-radio-button value=\"never\" class=\"mx-2\">Never</mat-radio-button>\r\n                        </mat-radio-group>\r\n                    </div>\r\n                </form>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <input matInput placeholder=\"Simple placeholder\" required>\r\n                </mat-form-field>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <mat-select required>\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\r\n                </mat-form-field>               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with hints</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field hintLabel=\"Max 10 characters\">\r\n                    <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n                    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select me\">\r\n                      <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n                </mat-form-field>                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with error messages</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n                </mat-form-field>                           \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with prefix & suffix</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Amount\" type=\"number\" [style.text-align]=\"'right'\">\r\n                    <span matPrefix>$&nbsp;</span>\r\n                    <span matSuffix>.00</span>\r\n                </mat-form-field>                        \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field theming</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"themingForm\" [style.fontSize.px]=\"getFontSize()\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <mat-select placeholder=\"Color\" formControlName=\"color\">\r\n                            <mat-option value=\"primary\">Primary</mat-option>\r\n                            <mat-option value=\"accent\">Accent</mat-option>\r\n                            <mat-option value=\"warn\">Warn</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n                        <mat-error *ngIf=\"themingForm.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n                    </mat-form-field>\r\n                </form>     \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n</div>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html'\r\n})\r\nexport class InputComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Input with a custom ErrorStateMatcher\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  //Input with a clear button\r\n  value = 'Clear me';\r\n}\r\n\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'input'\" \r\n    [title]=\"'Inputs'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic Inputs</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a custom ErrorStateMatcher</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n                        <mat-hint>Errors appear instantly!</mat-hint>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">Please enter a valid email address</mat-error>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('required')\">Email is <strong>required</strong></mat-error>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Auto-resizing textarea</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <textarea matInput \r\n                              placeholder=\"Autosize textarea\" \r\n                              matTextareaAutosize \r\n                              matAutosizeMinRows=\"2\"\r\n                              matAutosizeMaxRows=\"5\"></textarea>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a clear button</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\"/>\r\n                    <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                        <mat-icon>close</mat-icon>\r\n                    </button>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Inputs in a form</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                  \r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n                    </mat-form-field>\r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"First name\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address 2\"></textarea>\r\n                    </mat-form-field>                   \r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"City\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"State\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n                                    <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrls: ['./radio-button.component.scss']\r\n})\r\nexport class RadioButtonComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  favoriteSeason: string;\r\n  seasons = [\r\n    'Winter',\r\n    'Spring',\r\n    'Summer',\r\n    'Autumn',\r\n  ];\r\n}","<app-content-header \r\n    [icon]=\"'radio_button_checked'\" \r\n    [title]=\"'Radio button'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic radios</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group>\r\n                    <mat-radio-button value=\"1\" class=\"mx-2\">Option 1</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" class=\"mx-2\">Option 2</mat-radio-button>\r\n                </mat-radio-group>   \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Radios with ngModel</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group [(ngModel)]=\"favoriteSeason\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-radio-button *ngFor=\"let season of seasons\" [value]=\"season\" class=\"season-item mx-2\">\r\n                      {{season}}\r\n                    </mat-radio-button>\r\n                </mat-radio-group>\r\n                <div class=\"pt-3 mx-2\">Your favorite season is: <b> {{favoriteSeason}} </b></div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html'\r\n})\r\nexport class SelectComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Basic select\r\n  selectedValue: string;\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n  //Select with option groups\r\n  pokemonControl = new FormControl();\r\n  pokemonGroups = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  //Select with multiple selection\r\n  toppings = new FormControl();\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n  //Select with custom trigger text\r\n  toppings2 = new FormControl();\r\n  toppingList2 = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n}","<app-content-header \r\n    [icon]=\"'playlist_add_check'\" \r\n    [title]=\"'Select'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic select</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n                        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n                            {{food.viewValue}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <p class=\"pt-3 mx-2\"> Selected value: <b>{{selectedValue}}</b> </p>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with option groups</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n                            <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n                                {{ pokemon.viewValue }}\r\n                            </mat-option>\r\n                        </mat-optgroup>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with multiple selection</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with custom trigger text</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings2\" multiple>\r\n                        <mat-select-trigger>\r\n                          {{toppings2.value ? toppings2.value[0] : ''}}\r\n                          <small *ngIf=\"toppings2.value?.length > 1\">\r\n                            (+{{toppings2.value.length - 1}} others)\r\n                          </small>\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let topping of toppingList2\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html'\r\n})\r\nexport class SlideToggleComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n}","<app-content-header \r\n    [icon]=\"'star_half'\" \r\n    [title]=\"'Slide toggle'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slide-toggle configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <label class=\"mx-2\">Color:</label>\r\n                    <mat-radio-group [(ngModel)]=\"color\">\r\n                        <mat-radio-button value=\"primary\" class=\"mx-2\">Primary</mat-radio-button>\r\n                        <mat-radio-button value=\"accent\" class=\"mx-2\">Accent</mat-radio-button>\r\n                        <mat-radio-button value=\"warn\" class=\"mx-2\">Warn</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\" class=\"mx-2\">Checked</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <section class=\"py-3\">\r\n                    <mat-slide-toggle\r\n                        class=\"mx-2\"\r\n                        [color]=\"color\"\r\n                        [checked]=\"checked\"\r\n                        [disabled]=\"disabled\">\r\n                        Slide me!\r\n                    </mat-slide-toggle>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n\r\n  autoTicks = false;\r\n  disabled = false;\r\n  invert = false;\r\n  max = 100;\r\n  min = 0;\r\n  showTicks = false;\r\n  step = 1;\r\n  thumbLabel = false;\r\n  value = 0;\r\n  vertical = false;\r\n\r\n  get tickInterval(): number | 'auto' {\r\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n  }\r\n  set tickInterval(v) {\r\n    this._tickInterval = Number(v);\r\n  }\r\n  private _tickInterval = 1;\r\n\r\n}\r\n","<app-content-header \r\n    [icon]=\"'tune'\" \r\n    [title]=\"'Slider'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slider configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"value\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Min value\" [(ngModel)]=\"min\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Max value\" [(ngModel)]=\"max\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Step size\" [(ngModel)]=\"step\">\r\n                    </mat-form-field>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"showTicks\" class=\"mx-2\">Show ticks</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"autoTicks\" *ngIf=\"showTicks\" class=\"mx-2\">Auto ticks</mat-checkbox>\r\n                    <mat-form-field *ngIf=\"showTicks && !autoTicks\">\r\n                        <input matInput type=\"number\" placeholder=\"Tick interval\" [(ngModel)]=\"tickInterval\">\r\n                    </mat-form-field>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"thumbLabel\" class=\"mx-2\">Show thumb label</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"vertical\" class=\"mx-2\">Vertical</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"invert\" class=\"mx-2\">Inverted</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <mat-slider class=\"py-3 mx-2\"\r\n                    [disabled]=\"disabled\"\r\n                    [invert]=\"invert\"\r\n                    [max]=\"max\"\r\n                    [min]=\"min\"\r\n                    [step]=\"step\"\r\n                    [thumbLabel]=\"thumbLabel\"\r\n                    [tickInterval]=\"tickInterval\"\r\n                    [(ngModel)]=\"value\"\r\n                    [vertical]=\"vertical\">\r\n                </mat-slider>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>"]}