{"version":3,"sources":["./src/app/pages/form-controls/autocomplete/autocomplete.component.ts","./src/app/pages/form-controls/autocomplete/autocomplete.component.html","./src/app/pages/form-controls/checkbox/checkbox.component.ts","./src/app/pages/form-controls/checkbox/checkbox.component.html","./src/app/pages/form-controls/datepicker/datepicker.component.ts","./src/app/pages/form-controls/datepicker/datepicker.component.html","./src/app/pages/form-controls/form-controls.module.ts","./src/app/pages/form-controls/form-field/form-field.component.ts","./src/app/pages/form-controls/form-field/form-field.component.html","./src/app/pages/form-controls/input/input.component.ts","./src/app/pages/form-controls/input/input.component.html","./src/app/pages/form-controls/radio-button/radio-button.component.ts","./src/app/pages/form-controls/radio-button/radio-button.component.html","./src/app/pages/form-controls/select/select.component.ts","./src/app/pages/form-controls/select/select.component.html","./src/app/pages/form-controls/slide-toggle/slide-toggle.component.ts","./src/app/pages/form-controls/slide-toggle/slide-toggle.component.html","./src/app/pages/form-controls/slider/slider.component.ts","./src/app/pages/form-controls/slider/slider.component.html"],"names":[],"mappings":"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","file":"pages-form-controls-form-controls-module-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-autocomplete',\r\n  templateUrl: './autocomplete.component.html'\r\n})\r\nexport class AutocompleteComponent {\r\n  myControl: FormControl = new FormControl();\r\n  options = [\r\n    'One',\r\n    'Two',\r\n    'Three'\r\n  ];\r\n  filteredControl: FormControl = new FormControl();\r\n  filteredOptions: Observable<string[]>;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.filteredControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(val => this.filter(val))\r\n      );\r\n  }\r\n\r\n  filter(val): string[] {\r\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'short_text'\" \r\n    [title]=\"'Autocomplete'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\" class=\"p-2\"> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n                                {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Filter autocomplete</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <form>\r\n                    <mat-form-field>\r\n                        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"filteredControl\" [matAutocomplete]=\"auto\">\r\n                        <mat-autocomplete #auto=\"matAutocomplete\">\r\n                            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                              {{ option }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>           \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html'\r\n})\r\nexport class CheckboxComponent {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition = 'after';\r\n  disabled = false;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'check_box'\" \r\n    [title]=\"'Checkbox'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Checkbox configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\" class=\"mx-2\">Checked</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"indeterminate\" class=\"mx-2\">Indeterminate</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <label class=\"mx-2\">Label position:</label>\r\n                    <mat-radio-group [(ngModel)]=\"labelPosition\">\r\n                        <mat-radio-button value=\"after\" class=\"mx-2\">After</mat-radio-button>\r\n                        <mat-radio-button value=\"before\" class=\"mx-2\">Before</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox\r\n                        class=\"mx-2\"\r\n                        [(ngModel)]=\"checked\"\r\n                        [(indeterminate)]=\"indeterminate\"\r\n                        [labelPosition]=\"labelPosition\"\r\n                        [disabled]=\"disabled\">\r\n                        I'm a checkbox\r\n                    </mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n  styleUrls: ['./datepicker.component.scss']\r\n})\r\nexport class DatepickerComponent {  \r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  //Datepicker start date\r\n  startDate = new Date(1990, 0, 1);\r\n\r\n  //Datepicker with min & max validation\r\n  minDate = new Date(2010, 0, 1);\r\n  maxDate = new Date(2020, 0, 1);\r\n\r\n  //Datepicker with filter validation\r\n  myFilter = (d: Date): boolean => {\r\n    const day = d.getDay();\r\n    return day !== 0 && day !== 6;\r\n  }\r\n\r\n  //Datepicker input and change events\r\n  events: string[] = [];\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    this.events.push(`${type}: ${event.value}`);\r\n  }\r\n}\r\n","<app-content-header \r\n    [icon]=\"'today'\" \r\n    [title]=\"'Datepicker'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" fxLayout.gt-sm=\"row wrap\" class=\"p-2\"> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker1\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>   \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker start date</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with min & max validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"picker3\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker3></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker with filter validation</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker4\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker4></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker input and change events</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker5\" placeholder=\"Input & change events\"\r\n                          (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker5></mat-datepicker>\r\n                </mat-form-field>                \r\n                <div class=\"w-100 mat-elevation-z4 p-1 events-list\" perfectScrollbar> \r\n                    <div *ngFor=\"let e of events\">{{e}}</div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Disabled datepicker</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center center\">             \r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp1></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp2></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker touch UI</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker6\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\r\n                    <mat-datepicker touchUi=\"true\" #picker6></mat-datepicker>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div fxFlex=\"50\" class=\"p-2\"> \r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Datepicker open method</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayoutAlign=\"center center\">\r\n                <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\r\n                    <mat-datepicker #picker7></mat-datepicker>\r\n                </mat-form-field>\r\n                <button mat-raised-button (click)=\"picker7.open()\">Open</button>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>                                 \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { FormFieldComponent } from './form-field/form-field.component';\r\nimport { InputComponent } from './input/input.component';\r\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\r\nimport { SelectComponent } from './select/select.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\n\r\nexport const routes = [\r\n  { path: '', redirectTo: 'autocomplete', pathMatch: 'full'},\r\n  { path: 'autocomplete', component: AutocompleteComponent, data: { breadcrumb: 'Autocomplete' } },\r\n  { path: 'checkbox', component: CheckboxComponent, data: { breadcrumb: 'Checkbox' } },\r\n  { path: 'datepicker', component: DatepickerComponent, data: { breadcrumb: 'Datepicker' } },\r\n  { path: 'form-field', component: FormFieldComponent, data: { breadcrumb: 'Form Field' } },\r\n  { path: 'input', component: InputComponent, data: { breadcrumb: 'Input' } },\r\n  { path: 'radio-button', component: RadioButtonComponent, data: { breadcrumb: 'Radio Button' } },\r\n  { path: 'select', component: SelectComponent, data: { breadcrumb: 'Select' } },\r\n  { path: 'slider', component: SliderComponent, data: { breadcrumb: 'Slider' } },\r\n  { path: 'slide-toggle', component: SlideToggleComponent, data: { breadcrumb: 'Slide Toggle' } }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AutocompleteComponent, \r\n    CheckboxComponent, \r\n    DatepickerComponent, \r\n    FormFieldComponent, \r\n    InputComponent, \r\n    RadioButtonComponent, \r\n    SelectComponent, \r\n    SliderComponent, \r\n    SlideToggleComponent\r\n  ]\r\n})\r\nexport class FormControlsModule { }","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-form-field',\r\n  templateUrl: './form-field.component.html'\r\n})\r\nexport class FormFieldComponent {\r\n  options: FormGroup;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  hide:boolean = true;\r\n  themingForm: FormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public formBuilder:FormBuilder) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.options = this.formBuilder.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n    this.themingForm = this.formBuilder.group({\r\n      'color': 'primary',\r\n      'fontSize': [16, Validators.min(10)],\r\n    });\r\n  }\r\n  \r\n  getErrorMessage() {\r\n    return this.email.hasError('required') ? 'You must enter a value' :\r\n        this.email.hasError('email') ? 'Not a valid email' :\r\n            '';\r\n  }\r\n\r\n  getFontSize() {\r\n    return Math.max(10, this.themingForm.value.fontSize);\r\n  }\r\n\r\n}","<app-content-header \r\n    [icon]=\"'view_stream'\" \r\n    [title]=\"'Form field'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Simple form field</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Input\">\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <textarea matInput placeholder=\"Textarea\"></textarea>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select\">\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>                               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with placeholder</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <form [formGroup]=\"options\">\r\n                    <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n                    <div class=\"py-1\">\r\n                        <label>Float label: </label>\r\n                        <mat-radio-group formControlName=\"floatLabel\">\r\n                            <mat-radio-button value=\"auto\" class=\"mx-2\">Auto</mat-radio-button>\r\n                            <mat-radio-button value=\"always\" class=\"mx-2\">Always</mat-radio-button>\r\n                            <mat-radio-button value=\"never\" class=\"mx-2\">Never</mat-radio-button>\r\n                        </mat-radio-group>\r\n                    </div>\r\n                </form>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <input matInput placeholder=\"Simple placeholder\" required>\r\n                </mat-form-field>\r\n                <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\"\r\n                                [floatLabel]=\"options.value.floatLabel\">\r\n                    <mat-select required>\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\r\n                </mat-form-field>               \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with hints</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field hintLabel=\"Max 10 characters\">\r\n                    <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n                    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-select placeholder=\"Select me\">\r\n                      <mat-option value=\"option\">Option</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n                </mat-form-field>                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with error messages</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n                </mat-form-field>                           \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field with prefix & suffix</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Amount\" type=\"number\" [style.text-align]=\"'right'\">\r\n                    <span matPrefix>$&nbsp;</span>\r\n                    <span matSuffix>.00</span>\r\n                </mat-form-field>                        \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Form field theming</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"themingForm\" [style.fontSize.px]=\"getFontSize()\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <mat-select placeholder=\"Color\" formControlName=\"color\">\r\n                            <mat-option value=\"primary\">Primary</mat-option>\r\n                            <mat-option value=\"accent\">Accent</mat-option>\r\n                            <mat-option value=\"warn\">Warn</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field [color]=\"themingForm.value.color\">\r\n                        <input matInput type=\"number\" placeholder=\"Font size (px)\" formControlName=\"fontSize\" min=\"10\">\r\n                        <mat-error *ngIf=\"themingForm.get('fontSize')?.invalid\">Min size: 10px</mat-error>\r\n                    </mat-form-field>\r\n                </form>     \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>  \r\n</div>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html'\r\n})\r\nexport class InputComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Input with a custom ErrorStateMatcher\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  //Input with a clear button\r\n  value = 'Clear me';\r\n}\r\n\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}","<app-content-header \r\n    [icon]=\"'input'\" \r\n    [title]=\"'Inputs'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Basic Inputs</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <textarea matInput placeholder=\"Leave a comment\"></textarea>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a custom ErrorStateMatcher</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n                        <mat-hint>Errors appear instantly!</mat-hint>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">Please enter a valid email address</mat-error>\r\n                        <mat-error *ngIf=\"emailFormControl.hasError('required')\">Email is <strong>required</strong></mat-error>\r\n                    </mat-form-field>\r\n                </form>                              \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Auto-resizing textarea</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <textarea matInput \r\n                              placeholder=\"Autosize textarea\" \r\n                              matTextareaAutosize \r\n                              matAutosizeMinRows=\"2\"\r\n                              matAutosizeMaxRows=\"5\"></textarea>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Input with a clear button</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                <mat-form-field>\r\n                    <input matInput type=\"text\" placeholder=\"Clearable input\" [(ngModel)]=\"value\"/>\r\n                    <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                        <mat-icon>close</mat-icon>\r\n                    </button>\r\n                </mat-form-field>                       \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header fxLayoutAlign=\"center\">                \r\n                <mat-card-subtitle><h2>Inputs in a form</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <form fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                  \r\n                    <mat-form-field>\r\n                        <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\r\n                    </mat-form-field>\r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"First name\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address\">1600 Amphitheatre Pkwy</textarea>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field class=\"w-100\">\r\n                        <textarea matInput placeholder=\"Address 2\"></textarea>\r\n                    </mat-form-field>                   \r\n\r\n                    <table cellspacing=\"0\" class=\"w-100\">\r\n                        <tr>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"City\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput placeholder=\"State\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field class=\"w-100\">\r\n                                    <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\r\n                                    <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n                                </mat-form-field>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-radio-button',\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrls: ['./radio-button.component.scss']\r\n})\r\nexport class RadioButtonComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  favoriteSeason: string;\r\n  seasons = [\r\n    'Winter',\r\n    'Spring',\r\n    'Summer',\r\n    'Autumn',\r\n  ];\r\n}","<app-content-header \r\n    [icon]=\"'radio_button_checked'\" \r\n    [title]=\"'Radio button'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic radios</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group>\r\n                    <mat-radio-button value=\"1\" class=\"mx-2\">Option 1</mat-radio-button>\r\n                    <mat-radio-button value=\"2\" class=\"mx-2\">Option 2</mat-radio-button>\r\n                </mat-radio-group>   \r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Radios with ngModel</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-radio-group [(ngModel)]=\"favoriteSeason\" fxLayout=\"column\" fxLayoutAlign=\"center\">\r\n                    <mat-radio-button *ngFor=\"let season of seasons\" [value]=\"season\" class=\"season-item mx-2\">\r\n                      {{season}}\r\n                    </mat-radio-button>\r\n                </mat-radio-group>\r\n                <div class=\"pt-3 mx-2\">Your favorite season is: <b> {{favoriteSeason}} </b></div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html'\r\n})\r\nexport class SelectComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  //Basic select\r\n  selectedValue: string;\r\n  foods = [\r\n    {value: 'steak-0', viewValue: 'Steak'},\r\n    {value: 'pizza-1', viewValue: 'Pizza'},\r\n    {value: 'tacos-2', viewValue: 'Tacos'}\r\n  ];\r\n\r\n  //Select with option groups\r\n  pokemonControl = new FormControl();\r\n  pokemonGroups = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\r\n      ]\r\n    }\r\n  ];\r\n\r\n  //Select with multiple selection\r\n  toppings = new FormControl();\r\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n  //Select with custom trigger text\r\n  toppings2 = new FormControl();\r\n  toppingList2 = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n}","<app-content-header \r\n    [icon]=\"'playlist_add_check'\" \r\n    [title]=\"'Select'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Basic select</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n                        <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n                            {{food.viewValue}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <p class=\"pt-3 mx-2\"> Selected value: <b>{{selectedValue}}</b> </p>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with option groups</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n                        <mat-option>-- None --</mat-option>\r\n                        <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n                            <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n                                {{ pokemon.viewValue }}\r\n                            </mat-option>\r\n                        </mat-optgroup>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with multiple selection</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Select with custom trigger text</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-form-field class=\"mx-2\">\r\n                    <mat-select placeholder=\"Toppings\" [formControl]=\"toppings2\" multiple>\r\n                        <mat-select-trigger>\r\n                          {{toppings2.value ? toppings2.value[0] : ''}}\r\n                          <small *ngIf=\"toppings2.value?.length > 1\">\r\n                            (+{{toppings2.value.length - 1}} others)\r\n                          </small>\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let topping of toppingList2\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html'\r\n})\r\nexport class SlideToggleComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n}","<app-content-header \r\n    [icon]=\"'star_half'\" \r\n    [title]=\"'Slide toggle'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slide-toggle configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <label class=\"mx-2\">Color:</label>\r\n                    <mat-radio-group [(ngModel)]=\"color\">\r\n                        <mat-radio-button value=\"primary\" class=\"mx-2\">Primary</mat-radio-button>\r\n                        <mat-radio-button value=\"accent\" class=\"mx-2\">Accent</mat-radio-button>\r\n                        <mat-radio-button value=\"warn\" class=\"mx-2\">Warn</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"checked\" class=\"mx-2\">Checked</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <section class=\"py-3\">\r\n                    <mat-slide-toggle\r\n                        class=\"mx-2\"\r\n                        [color]=\"color\"\r\n                        [checked]=\"checked\"\r\n                        [disabled]=\"disabled\">\r\n                        Slide me!\r\n                    </mat-slide-toggle>\r\n                </section>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>","import { Component } from '@angular/core';\r\nimport { AppSettings } from '../../../app.settings';\r\nimport { Settings } from '../../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent {\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings) {\r\n    this.settings = this.appSettings.settings;     \r\n  }\r\n\r\n\r\n  autoTicks = false;\r\n  disabled = false;\r\n  invert = false;\r\n  max = 100;\r\n  min = 0;\r\n  showTicks = false;\r\n  step = 1;\r\n  thumbLabel = false;\r\n  value = 0;\r\n  vertical = false;\r\n\r\n  get tickInterval(): number | 'auto' {\r\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\r\n  }\r\n  set tickInterval(v) {\r\n    this._tickInterval = Number(v);\r\n  }\r\n  private _tickInterval = 1;\r\n\r\n}\r\n","<app-content-header \r\n    [icon]=\"'tune'\" \r\n    [title]=\"'Slider'\" \r\n    [hideBreadcrumb]=\"false\"\r\n    [hasBgImage]=\"true\" \r\n    [class]=\"'pb-4'\"></app-content-header>\r\n\r\n<div fxLayout=\"column\" class=\"p-2\">\r\n    <div class=\"p-2\">\r\n        <mat-card>\r\n            <mat-card-header>                \r\n                <mat-card-subtitle><h2>Slider configuration</h2></mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <section class=\"py-3\">\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Value\" [(ngModel)]=\"value\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Min value\" [(ngModel)]=\"min\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Max value\" [(ngModel)]=\"max\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"mx-2\">\r\n                        <input matInput type=\"number\" placeholder=\"Step size\" [(ngModel)]=\"step\">\r\n                    </mat-form-field>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"showTicks\" class=\"mx-2\">Show ticks</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"autoTicks\" *ngIf=\"showTicks\" class=\"mx-2\">Auto ticks</mat-checkbox>\r\n                    <mat-form-field *ngIf=\"showTicks && !autoTicks\">\r\n                        <input matInput type=\"number\" placeholder=\"Tick interval\" [(ngModel)]=\"tickInterval\">\r\n                    </mat-form-field>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"thumbLabel\" class=\"mx-2\">Show thumb label</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"vertical\" class=\"mx-2\">Vertical</mat-checkbox>\r\n                    <mat-checkbox [(ngModel)]=\"invert\" class=\"mx-2\">Inverted</mat-checkbox>\r\n                </section>\r\n                <section class=\"py-3\">\r\n                    <mat-checkbox [(ngModel)]=\"disabled\" class=\"mx-2\">Disabled</mat-checkbox>\r\n                </section>                            \r\n            </mat-card-content>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <h2 class=\"py-3 mx-2\">Result</h2>\r\n                <mat-slider class=\"py-3 mx-2\"\r\n                    [disabled]=\"disabled\"\r\n                    [invert]=\"invert\"\r\n                    [max]=\"max\"\r\n                    [min]=\"min\"\r\n                    [step]=\"step\"\r\n                    [thumbLabel]=\"thumbLabel\"\r\n                    [tickInterval]=\"tickInterval\"\r\n                    [(ngModel)]=\"value\"\r\n                    [vertical]=\"vertical\">\r\n                </mat-slider>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div> \r\n</div>"],"sourceRoot":"webpack:///"}