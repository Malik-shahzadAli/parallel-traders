{"version":3,"sources":["webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.module.ts"],"names":["LoginComponent","appSettings","fb","router","settings","form","group","compose","required","minLength","values","valid","navigate","setTimeout","loadingSpinner","onSubmit","selector","templateUrl","routes","path","component","pathMatch","LoginModule","forChild","imports","declarations"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { emailValidator } from '../../theme/utils/app-validators';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  public form:FormGroup;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, public fb: FormBuilder, public router:Router){\r\n    this.settings = this.appSettings.settings; \r\n    this.form = this.fb.group({\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])],\r\n      'password': [null, Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      'rememberMe': false\r\n    });\r\n  }\r\n\r\n  public onSubmit(values:Object):void {\r\n    if (this.form.valid) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    setTimeout(() => {\r\n      this.settings.loadingSpinner = false; \r\n    }); \r\n  }\r\n}","<mat-sidenav-container class=\"h-100\">\r\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"h-100\">\r\n       <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(form.value)\" fxFlex=\"90\" fxFlex.gt-sm=\"30\" fxFlex.sm=\"60\" class=\"mat-elevation-z6\">\r\n            <app-content-header \r\n                [icon]=\"'exit_to_app'\" \r\n                [title]=\"'Login'\" \r\n                [hideBreadcrumb]=\"true\"\r\n                [hasBgImage]=\"true\" \r\n                [class]=\"'py-4'\"></app-content-header>            \r\n            <div class=\"p-3\">\r\n                <a mat-button routerLink=\"/register\" color=\"accent\" class=\"w-100\">Don't have an account? Sign up now!</a>\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">mail</mat-icon>\r\n                    <input matInput placeholder=\"Email\" formControlName=\"email\">\r\n                    <mat-error *ngIf=\"form.controls.email.errors?.required\">Email is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.email.hasError('invalidEmail')\">Invalid email address</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field class=\"w-100\">\r\n                    <mat-icon matPrefix class=\"mat-icon-sm mb-2 mr-2 secondary-text-color\">lock</mat-icon>\r\n                    <input matInput placeholder=\"Password\" formControlName=\"password\">\r\n                    <mat-error *ngIf=\"form.controls.password.errors?.required\">Password is required</mat-error>\r\n                    <mat-error *ngIf=\"form.controls.password.hasError('minlength')\">Password isn't long enough, minimum of 6 characters</mat-error>\r\n                </mat-form-field>               \r\n                <mat-slide-toggle formControlName=\"rememberMe\" class=\"my-2\">Keep me signed in</mat-slide-toggle>\r\n                <button mat-raised-button color=\"primary\" class=\"mat-elevation-z6 w-100 mt-3\" type=\"submit\">SIGN IN</button>\r\n            </div>\r\n        </form>\r\n  </div>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: LoginComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }"]}